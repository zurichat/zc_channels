{"version":3,"sources":["utils/api.js","utils/utils.js","redux/actions/types.js","redux/actions/app.js","components/createChannel/createChannelModal.jsx","components/home/Home.jsx","components/admin/index.jsx","components/createChannel/index.jsx","components/MessageBoard/MessageBoardIndex.jsx","components/TempSidebar/index.jsx","routes/routes.js","redux/reducers/appReducer.js","redux/reducers/index.js","redux/store.js","App.js","reportWebVitals.js","utils/theme.js","index.js"],"names":["defaultConfig","baseURL","timeout","headers","api","axios","create","interceptors","request","use","config","err","Promise","reject","instance","data","a","post","this","toast","createStandaloneToast","emailRegex","title","description","status","duration","isClosable","position","name","includes","split","date","moment","fromNow","type","format","GET_USERS","appActions","_alert","message","UtlilityService","showAlert","_getUsers","params","dispatch","APIService","getUsers","res","payload","console","log","CreateChannelModal","useDisclosure","isOpen","onOpen","onClose","initialRef","React","useRef","finalRef","onClick","size","bg","color","pt","pb","fontSize","initialFocusRef","finalFocusRef","p","mt","borderRadius","pr","mb","fontWeight","ref","height","focusBorderColor","style","fontStyle","as","display","alignItems","width","colorScheme","backgroundColor","Home","useDispatch","bindActionCreators","users","useSelector","state","appReducer","loadData","useEffect","w","ml","cursor","Admin","CreateChannel","MessageBoardIndex","TempSidebar","routes","exact","path","initialState","action","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","styles","colors","neutral","900","800","700","600","500","400","300","200","100","global","_focus","outline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f254124a.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseURL = ''\n\nconst defaultConfig = {\n  baseURL,\n  timeout: 60000,\n  headers: {\n    'Content-type': 'application/json',\n    'Access-Control-Allow-Origin': '*',\n  },\n}\n\nconst api = axios.create({ ...defaultConfig })\n\napi.interceptors.request.use(\n  config => {\n    const token = '' // Whatever the token is\n    if (token) config.headers.Authorization = `Bearer ${token}`\n    return config\n  },\n  err => Promise.reject(err),\n)\nclass APIServices {\n  // @desc End Point Example\n  async getUsers(data) {\n    return api.post('/some-endpoint', data)\n  }\n}\n\nconst instance = new APIServices()\n\nexport default instance\n","import { createStandaloneToast } from '@chakra-ui/react'\nimport moment from 'moment'\n\nclass UtilityService {\n  constructor() {\n    this.toast = createStandaloneToast()\n\n    this.emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n  }\n\n  showAlert(title, description, status, duration) {\n    if (!title || !description || !status || !duration) return\n\n    this.toast({\n      title,\n      description,\n      status,\n      duration,\n      isClosable: true,\n      position: 'bottom-right',\n    })\n  }\n\n  getFirstName(name) {\n    return name.includes(' ') ? name.split(' ')[0] : name\n  }\n\n  getLastName(name) {\n    return name.includes(' ') ? name.split(' ')[0] : name\n  }\n\n  dateFromNow(date) {\n    return moment(date).fromNow()\n  }\n\n  formatDate(date, type) {\n    return moment(date).format(type)\n  }\n}\n\nconst instance = new UtilityService()\n\nexport default instance\n","// Types example\n// STEP ONE\nexport const GET_USERS = 'GET_USERS'\n","import APIService from '../../utils/api'\nimport UtlilityService from '../../utils/utils'\nimport { GET_USERS } from './types'\n\n// Redux actions are called here with an underscore before the name (convention)\n\nconst _alert = (type, message) => {\n  if (type === 'success') {\n    const title = message\n    const description = ' '\n    const status = 'info'\n    const duration = 3000\n\n    UtlilityService.showAlert(title, description, status, duration)\n  }\n\n  if (type === 'error') {\n    const title = 'Something went wrong.'\n    const description = ' '\n    const status = 'error'\n    const duration = 3000\n\n    UtlilityService.showAlert(title, description, status, duration)\n  }\n}\n\n// STEP FOUR\n// @desc This is a redux function to fetch users and update the redux state\n// Pass params if needed\nconst _getUsers = params => async dispatch => {\n  try {\n    // Result comes from the endpoint\n    // Let's assume an array of objects is returned from the endpoint\n    const res = await APIService.getUsers()\n\n    // Result is sent to the store via dispatch (Pass payload if needed)\n    dispatch({ type: GET_USERS, payload: res.data })\n  } catch (error) {\n    // Handle exceptions here\n    console.log(error)\n  }\n}\n\n// Export functions here\nconst appActions = { _alert, _getUsers }\nexport default appActions\n","import { FormControl, FormLabel, Heading, Input, ModalBody, ModalCloseButton, ModalFooter, Switch, useDisclosure } from '@chakra-ui/react'\nimport { Button, Modal, ModalContent, ModalHeader, ModalOverlay } from '@chakra-ui/react'\nimport { Text } from '@chakra-ui/layout'\n\nimport React from 'react'\n\nconst CreateChannelModal = () => {\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const initialRef = React.useRef()\n    const finalRef = React.useRef()\n    return (\n        <>\n        <Button onClick={onOpen}size=\"sm\" bg=\"#00b87c\" color=\"white\" pt=\"2\" pb=\"2\" fontSize=\"14px\">Create New channel</Button>\n        <Modal\n          initialFocusRef={initialRef}\n          finalFocusRef={finalRef}\n          isOpen={isOpen}\n          onClose={onClose}\n          size=\"lg\"\n        >\n          <ModalOverlay />\n          <ModalContent p={2} mt=\"8rem\" borderRadius=\"2px\">\n            <ModalHeader pb={0} fontSize=\"20px\">Create a Channel</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody pb={3} >\n            <Text color='#8B8B8B' pb={4} fontSize=\"16px\" pr={0}>Channels are where your team communicates. They’re best when organized around a topic — #marketing, for example.</Text>\n\n              <FormControl mb={7}>\n                <FormLabel fontWeight=\"bold\">Name</FormLabel>\n                <Input ref={initialRef} height=\"3.2rem\" borderRadius=\"2px\" focusBorderColor=\"green.200\"/>\n              </FormControl>\n  \n              <FormControl mt={5}>\n                <FormLabel fontWeight=\"bold\">Description <i style={{color:\"#8b8b8b\", fontStyle:\"normal\" ,fontWeight:\"normal\"}}>(optional)</i> </FormLabel>\n                <Input height=\"3.2rem\" borderRadius=\"2px\" focusBorderColor=\"green.200\"/>\n              </FormControl>\n\n              <Text color='#8B8B8B' pb={8} fontSize=\"16px\" pr={0}>What is this channel about?</Text>\n            \n                <Heading as=\"h5\" size=\"sm\" fontSize=\"16px\" fontWeight=\"600\" mt=\"1\">Make this Channel Private</Heading>\n                <FormControl display=\"flex\" alignItems=\"center\" mb={2}>\n                    <FormLabel mb=\"0\" width=\"90%\" color=\"#8b8b8b\" fontSize=\"15px\" pt=\"2\" fontWeight=\"normal\">\n                    When a channel is set to private, <br/>\n                    it can only be viewed or joined by invitation.\n                    </FormLabel>\n                    <Switch colorScheme=\"whatsapp\" focusBorderColor=\"green.400\"/>\n                </FormControl>\n            </ModalBody>\n  \n            <ModalFooter>\n              <Button backgroundColor=\"#00B87C\" pt={6} pb={6} colorScheme=\"white\" width=\"12rem\" mb=\"4\" borderRadius=\"3px\" onClick={onClose}>\n                Create\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </>\n    )\n}\n\nexport default CreateChannelModal;\n","import React, { useEffect } from 'react'\nimport { Box, Text } from '@chakra-ui/layout'\nimport appActions from '../../redux/actions/app'\nimport { bindActionCreators } from 'redux'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Heading } from '@chakra-ui/react'\nimport { BiChevronDown } from 'react-icons/bi'\nimport { Flex, Spacer } from \"@chakra-ui/react\"\nimport CreateChannelModal from '../createChannel/createChannelModal'\n\nconst Home = () => {\n  // STEP FIVE (Extract redux function)\n  const dispatch = useDispatch()\n  const { _getUsers } = bindActionCreators(appActions, dispatch)\n\n  // STEP EIGHT (Extract redux state)\n  const { users } = useSelector(state => state.appReducer)\n  console.log(users)\n\n  // STEP SIX\n  const loadData = async () => {\n    await _getUsers()\n  }\n\n  // STEP SEVEN\n  useEffect(() => {\n    loadData()\n  }, [])\n\n  return (\n<Box width='100%' height='100vh' bg='#E5E5E5' pt={4}>\n      <Box bg=\"white\" w=\"95%\" p={4} color=\"black\" ml=\"8\" borderRadius=\"2px\">\n        <Flex cursor=\"pointer\" alignItems=\"center\">\n        <Heading as=\"h5\" size=\"sm\" fontWeight=\"semibold\"> # New Channel </Heading>\n        <BiChevronDown />\n        <Spacer />\n        <CreateChannelModal />\n        </Flex>\n      </Box>      \n    </Box>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { Box } from '@chakra-ui/layout'\n\nconst Admin = () => {\n  return <Box></Box>\n}\n\nexport default Admin\n","import React from 'react'\nimport { Box } from '@chakra-ui/layout'\n\nconst CreateChannel = () => {\n  return <Box></Box>\n}\n\nexport default CreateChannel\n","import React from 'react'\nimport { Box } from '@chakra-ui/layout'\n\nconst MessageBoardIndex = () => {\n    return(\n        <Box>\n\n        </Box>\n    )\n}\n\nexport default MessageBoardIndex;","import React from \"react\";\nimport { Box } from \"@chakra-ui/layout\";\n\nconst TempSidebar = () => {\n  return <Box></Box>;\n};\n\nexport default TempSidebar;\n","import { Switch, Route } from \"react-router-dom\";\nimport Home from \"../components/home/Home\";\nimport Admin from \"../components/admin/index\";\nimport CreateChannel from \"../components/createChannel/index\";\nimport MessageBoardIndex from \"../components/MessageBoard/MessageBoardIndex\";\nimport TempSidebar from \"../components/TempSidebar/index\";\n\nconst routes = () => {\n  return (\n      <Switch>\n        <TempSidebar />\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/create-channel\">\n          <CreateChannel />\n        </Route>\n        <Route path=\"/admin\">\n          <Admin />\n        </Route>\n        <Route path=\"/message-board\">\n          <MessageBoardIndex />\n        </Route>\n      </Switch>\n  );\n};\n\nexport default routes;\n","import { GET_USERS } from '../actions/types'\n\nconst initialState = {\n  // STEP TWO\n  // Default State\n  users: [],\n}\n\nconst appReducer = (state = initialState, action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    // STEP THREE\n    // A new state is returned with the data from the endpoint\n    // The GET USERS case is handled here\n    case GET_USERS:\n      return {\n        ...state,\n        users: payload,\n      }\n\n    // Default state is returned\n    default:\n      return state\n  }\n}\n\nexport default appReducer\n","import { combineReducers } from 'redux'\nimport appReducer from './appReducer'\n\nexport default combineReducers({\n  appReducer,\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware)),\n)\n\nexport default store\n","import './App.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport routes from './routes/routes'\nimport store from './redux/store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route component={routes} />\n        </Switch>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from '@chakra-ui/react'\n\nconst theme = extendTheme({\n  styles: {\n    colors: {\n      neutral: {\n        900: '',\n        800: '',\n        700: '',\n        600: '#242424',\n        500: '#3A3A3A',\n        400: '#8B8B8B',\n        300: '#BEBEBE',\n        200: '#EBEBEB',\n        100: '#F9F9F9'\n      }\n    },\n    global: {\n      'a, button': {\n        _focus: {\n          outline: 'none',\n        }\n      },\n      'svg': {\n        color: '#8B8B8B'\n      }\n    },\n  },\n})\n\nexport { theme }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport { theme } from './utils/theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}
