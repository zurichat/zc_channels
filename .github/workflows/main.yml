name: Channels Deployment Pipeline

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ dev ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use cached node_modules
        uses: c-hive/gha-yarn-cache@v2
        with:
         directory: frontend
         
      - name: install Dependencies
        run: |
          cd frontend/main
          git init
          yarn install
          yarn relocate_main
          cd ../root
          git init
          yarn install
          yarn relocate_root

      - name: Exec remote commands via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd /var/www/zc_plugin_channels/
            git checkout dev
            git stash
            git pull origin dev
            cd frontend/main 
            yarn install
            cd ../root
            yarn install
            

      - name: Copy Client dist folder to server
        uses: Creepios/sftp-action@v1.0.1
        with:
          password: ${{ secrets.PASSWORD }}
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          localPath: './backend/channel_plugin/channel_plugin/build'
          remotePath: '/var/www/zc_plugin_channels/backend/channel_plugin/channel_plugin/build'

      - name: Exec remote commands via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd /var/www/zc_plugin_channels/backend/channel_plugin/
            source .venv/bin/activate
            pip3 install -r requirements/production.txt
            python3 manage.py collectstatic --noinput
            pkill -u ${{secrets.USERNAME}} gunicorn 
            gunicorn --bind 0.0.0.0:9000 config.wsgi --daemon

